// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PNWResource.API.Data;

#nullable disable

namespace PNWResource.API.Migrations
{
    [DbContext(typeof(PNWResourceDbContext))]
    partial class PNWResourceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PNWResource.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Portland",
                            State = "OR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Salem",
                            State = "OR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vancouver",
                            State = "WA"
                        });
                });

            modelBuilder.Entity("PNWResource.API.Entities.DaycareCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("DaycareCenters");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeEnds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStarts")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "",
                            EndDate = new DateTime(2024, 10, 5, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6249),
                            Name = "Adventure Cove",
                            StartDate = new DateTime(2024, 10, 4, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6212),
                            TimeEnds = "2:00pm",
                            TimeStarts = "11:00am"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "",
                            EndDate = new DateTime(2024, 10, 5, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6255),
                            Name = "Sunny Meadows Run",
                            StartDate = new DateTime(2024, 10, 4, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6254),
                            TimeEnds = "2:00pm",
                            TimeStarts = "11:00am"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "",
                            EndDate = new DateTime(2024, 10, 5, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6258),
                            Name = "Jungle Jumper Play Time",
                            StartDate = new DateTime(2024, 10, 4, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6257),
                            TimeEnds = "2:00pm",
                            TimeStarts = "11:00am"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "",
                            EndDate = new DateTime(2024, 10, 5, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6261),
                            Name = "Splash & Dash Park & Slide",
                            StartDate = new DateTime(2024, 10, 4, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6260),
                            TimeEnds = "2:00pm",
                            TimeStarts = "11:00am"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "",
                            EndDate = new DateTime(2024, 10, 5, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6264),
                            Name = "Little Explorers Find and Seek",
                            StartDate = new DateTime(2024, 10, 4, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6263),
                            TimeEnds = "2:00pm",
                            TimeStarts = "11:00am"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "",
                            EndDate = new DateTime(2024, 10, 5, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6267),
                            Name = "Rainbow Slide and Dive",
                            StartDate = new DateTime(2024, 10, 4, 15, 2, 23, 119, DateTimeKind.Local).AddTicks(6266),
                            TimeEnds = "2:00pm",
                            TimeStarts = "11:00am"
                        });
                });

            modelBuilder.Entity("PNWResource.API.Entities.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasChildrenSection")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Park", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasPicnicArea")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasPlayground")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaygroundId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PlaygroundId")
                        .IsUnique()
                        .HasFilter("[PlaygroundId] IS NOT NULL");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Playground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateConstructed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasBathrooms")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPetFriendly")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.Property<int?>("ParkId1")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ParkId1");

                    b.ToTable("Playgrounds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "",
                            CityId = 1,
                            Name = "Adventure Cove",
                            State = ""
                        },
                        new
                        {
                            Id = 2,
                            Address = "",
                            CityId = 1,
                            Name = "Sunny Meadows Park",
                            State = ""
                        },
                        new
                        {
                            Id = 3,
                            Address = "",
                            CityId = 2,
                            Name = "Jungle Jumper Playground",
                            State = ""
                        },
                        new
                        {
                            Id = 4,
                            Address = "",
                            CityId = 2,
                            Name = "Splash & Dash Park",
                            State = ""
                        },
                        new
                        {
                            Id = 5,
                            Address = "",
                            CityId = 3,
                            Name = "Little Explorers Park",
                            State = ""
                        },
                        new
                        {
                            Id = 6,
                            Address = "",
                            CityId = 3,
                            Name = "Rainbow Slide Haven",
                            State = ""
                        });
                });

            modelBuilder.Entity("PNWResource.API.Entities.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasChildrenArea")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Zoos");
                });

            modelBuilder.Entity("PNWResource.API.Entities.DaycareCenter", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("DaycareCenters")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Event", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("Events")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Library", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("Librarys")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Park", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("Parks")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PNWResource.API.Entities.Playground", "Playground")
                        .WithOne()
                        .HasForeignKey("PNWResource.API.Entities.Park", "PlaygroundId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");

                    b.Navigation("Playground");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Playground", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("Playgrounds")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PNWResource.API.Entities.Park", "Park")
                        .WithMany()
                        .HasForeignKey("ParkId1");

                    b.Navigation("City");

                    b.Navigation("Park");
                });

            modelBuilder.Entity("PNWResource.API.Entities.School", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("Schools")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("PNWResource.API.Entities.Zoo", b =>
                {
                    b.HasOne("PNWResource.API.Entities.City", "City")
                        .WithMany("Zoos")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("PNWResource.API.Entities.City", b =>
                {
                    b.Navigation("DaycareCenters");

                    b.Navigation("Events");

                    b.Navigation("Librarys");

                    b.Navigation("Parks");

                    b.Navigation("Playgrounds");

                    b.Navigation("Schools");

                    b.Navigation("Zoos");
                });
#pragma warning restore 612, 618
        }
    }
}
